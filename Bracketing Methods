/*Roll no.: EE23B049
Name: Nishanth Senthil Kumar
Date: 1 September 2023
Version: 1
Description: To find the roots of a given polynomial equation using bisection method and false position method
Input: 1 - for bisection, 2 - for false position
Ouput: roots of given equation
*/

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>



float function(float x);//function to find values of given function



int main(int argc, char *argv[])
{

    float upper=0.5;
    float lower=1.0;
    float midn;
    float xmo=(upper+lower)/2;
    float xm=0.0;
    float e=1000;



    if(strcmp(argv[1], "1")==0)//for bisection
    {

     while(e>10){

        xm=xmo;

        if(function(upper)*function(xmo)<0){
            lower=xmo;


        }

        else if(function(lower)*function(xmo)<0){

            upper=xmo;
  
        }

        xmo=(upper+lower)/2;

        e=fabs((xm-xmo)/xmo)*100;

     }

    }



    if(strcmp(argv[1], "2")==0)//for false position
    {

        
    while(e>0.2){

        xm=xmo;
        xmo= upper -((function(upper)*(lower - upper))/(function(lower)-function(upper)));


        if(function(upper)*function(xmo)<0){
            lower=xmo;


        }

        else if(function(lower)*function(xmo)<0){

            upper=xmo;
  
        }


        e=fabs((xm-xmo)/xmo)*100;

     }


    }



     printf("%f", xmo);

return 0;
}
    

float function(float x)
{
    x = 0.7*pow(x,5) - 8*pow(x,4) + 44*pow(x,3) - 90*pow(x,2) + 82*pow(x,1)-25;
    return x;
}
